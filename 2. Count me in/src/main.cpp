/**
* Opdracht 2: Count me in
* 2 digit 7 segment display telt van 0-99 en loopt weer
*
* Auteur: Kim Phung | S1102710
* Versie: 2.0
* Aangemaakt: 13 september 2019
* Laatste wijziging: 25 september 2019
*/
#include <avr/io.h>
#include <util/delay.h>

//LET OP! code is een beetje vies, maar u zij dat het voor de eerste paar opdrachten wel ok zou zijn.

//functie om elk segment in een array te stoppen
void myForloop() {
  //array voor elke segment en 3 dataregisters B, D en C
  int numb[100];
  int numb0[100];
  int numb00[100];

  //SCHEMA SEGMENT
  //Rechter Digit:
  //PD7 = bovenste segment
  //PD6 = linksboven segment
  //PB4 = rechtsboven segment
  //PB1 = middelste segment
  //PB3 = linksonder segment
  //PB5 = rechtsonder segment
  //PC5 = onderste segment

  //Linker Digit:
  //PD4 = bovenste segment
  //PD2 = linksboven segment
  //PD5 = rechtsboven segment
  //PD3 = middelste segment
  //PB0 = linksonder segment
  //PB2 = rechtsonder segment
  //PC4 = onderste segment

  //linker-nummer 0
  // numb[1] = ~(1 << PB2) & ~(1 << PB0);
  // numb0[1] = ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  // numb00[1] = ~(1 << PC4);

  /* */ // <--betekent afscheiding van linker en rechter decimaal
  //3 array variablen want ik maak gebruik van registers B, D en C
  //numb = register B
  //numb0 = register D
  //numb00 = register C
  //Gebruik bij c register: (1 << PC5) | (1 << PC4); om uit te zetten
  //ga naar regel 550 voor het einde

  //number 0
  numb[0] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[0] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[0] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 1
  numb[1] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[1] = /* */ ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[1] = /* */ ~(1 << PC4);

  //number 2
  numb[2] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[2] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[2] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 3
  numb[3] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[3] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[3] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 4
  numb[4] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[4] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[4] =  /* */  ~(1 << PC4);

  //number 5
  numb[5] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[5] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[5] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 6
  numb[6] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[6] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[6] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 7
  numb[7] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[7] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[7] =  /* */ ~(1 << PC4);

  //number 8
  numb[8] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[8] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[8] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 9
  numb[9] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[9] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD2);
  numb00[9] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 10
  numb[10] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[10] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[10] = ~(1 << PC5) /* */;

  //number 11
  numb[11] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[11] = /* */ ~(1 << PD5);
  numb00[11] = /* */ (1 << PC5) | (1 << PC4);

  //number 12
  numb[12] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[12] = ~(1 << PD7) /* */ & ~(1 << PD5);
  numb00[12] = ~(1 << PC5) /* */;

  //number 13
  numb[13] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[13] = ~(1 << PD7) /* */ & ~(1 << PD5);
  numb00[13] = ~(1 << PC5) /* */;

  //number 14
  numb[14] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[14] = ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[14] = /* */ (1 << PC5) | (1 << PC4);

  //number 15
  numb[15] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[15] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[15] = ~(1 << PC5) /* */;

  //number 16
  numb[16] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[16] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[16] = ~(1 << PC5) /* */;

  //number 17
  numb[17] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[17] = ~(1 << PD7) /* */ & ~(1 << PD5);
  numb00[17] = /* */ (1 << PC5) | (1 << PC4);

  //number 18
  numb[18] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[18] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[18] = ~(1 << PC5) /* */;

  //number 19
  numb[19] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[19] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5);
  numb00[19] = ~(1 << PC5) /* */;

  //number 20
  numb[20] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB0);
  numb0[20] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[20] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 21
  numb[21] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB0);
  numb0[21] = /* */ ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[21] = /* */ ~(1 << PC4);

  //number 22
  numb[22] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[22] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[22] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 23
  numb[23] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[23] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[23] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 24
  numb[24] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[24] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[24] =  /* */  ~(1 << PC4);

  //number 25
  numb[25] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[25] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[25] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 26
  numb[26] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[26] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[26] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 27
  numb[27] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB0);
  numb0[27] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[27] =  /* */ ~(1 << PC4);

  //number 28
  numb[28] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[28] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[28] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 29
  numb[29] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB0);
  numb0[29] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[29] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 30
  numb[30] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[30] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[30] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 31
  numb[31] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[31] = /* */ ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[31] = /* */ ~(1 << PC4);

  //number 32
  numb[32] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[32] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[32] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 33
  numb[33] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[33] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[33] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 34
  numb[34] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[34] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[34] =  /* */  ~(1 << PC4);

  //number 35
  numb[35] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[35] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[35] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 36
  numb[36] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[36] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[36] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 37
  numb[37] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[37] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[37] =  /* */ ~(1 << PC4);

  //number 38
  numb[38] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[38] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[38] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 39
  numb[39] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[39] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3);
  numb00[39] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 40
  numb[40] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[40] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[40] = ~(1 << PC5) /* */;

  //number 41
  numb[41] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[41] = /* */ ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[41] = /* */ ~(1 << PC5) | ~(1 << PC4);

  //number 42
  numb[42] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[42] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[42] = ~(1 << PC5) /* */;

  //number 43
  numb[43] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[43] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[43] = ~(1 << PC5) /* */;

  //number 44
  numb[44] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[44] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[44] =  /* */  ~(1 << PC5) | ~(1 << PC4);

  //number 45
  numb[45] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[45] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[45] =  ~(1 << PC5) /* */;

  //number 46
  numb[46] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[46] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[46] =  ~(1 << PC5) /* */;

  //number 47
  numb[47] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[47] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[47] =  /* */ ~(1 << PC5) | ~(1 << PC4);

  //number 48
  numb[48] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[48] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[48] = ~(1 << PC5) /* */;

  //number 49
  numb[49] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[49] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD3) & ~(1 << PD2);
  numb00[49] = ~(1 << PC5) /* */;

  //number 50
  numb[50] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[50] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[50] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 51
  numb[51] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[51] = /* */ ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[51] = /* */ ~(1 << PC4);

  //number 52
  numb[52] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[52] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[52] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 53
  numb[53] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[53] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[53] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 54
  numb[54] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[54] = ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[54] =  /* */ ~(1 << PC4);

  //number 55
  numb[55] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[55] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[55] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 56
  numb[56] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[56] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[56] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 57
  numb[57] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[57] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[57] =  /* */ ~(1 << PC4);

  //number 58
  numb[58] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[58] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[58] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 59
  numb[59] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[59] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[59] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 60
  numb[60] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[60] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[60] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 61
  numb[61] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[61] = /* */ ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[61] = /* */ ~(1 << PC4);

  //number 62
  numb[62] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[62] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[62] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 63
  numb[63] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[63] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[63] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 64
  numb[64] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[64] = ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[64] =  /* */ ~(1 << PC4);

  //number 65
  numb[65] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[65] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[65] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 66
  numb[66] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[66] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[66] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 67
  numb[67] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[67] = ~(1 << PD7) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[67] =  /* */ ~(1 << PC4);

  //number 68
  numb[68] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[68] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[68] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 69
  numb[69] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[69] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[69] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 70
  numb[70] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[70] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[70] = ~(1 << PC5) /* */;

  //number 71
  numb[71] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[71] = /* */ ~(1 << PD5) & ~(1 << PD4);
  numb00[71] = /* */ ~(1 << PC5) | ~(1 << PC4);

  //number 72
  numb[72] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[72] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[72] = ~(1 << PC5) /* */;

  //number 73
  numb[73] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[73] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[73] = ~(1 << PC5) /* */;

  //number 74
  numb[74] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[74] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[74] =  /* */ ~(1 << PC5) | ~(1 << PC4);

  //number 75
  numb[75] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[75] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[75] =  ~(1 << PC5) /* */;

  //number 76
  numb[76] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[76] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[76] =  ~(1 << PC5) /* */;

  //number 77
  numb[77] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[77] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[77] =  /* */ ~(1 << PC5) | ~(1 << PC4);

  //number 78
  numb[78] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[78] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[78] = ~(1 << PC5) /* */;

  //number 79
  numb[79] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[79] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4);
  numb00[79] = ~(1 << PC5) /* */;

  //number 80
  numb[80] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[80] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[80] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 81
  numb[81] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[81] = /* */ ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[81] = /* */ ~(1 << PC4);

  //number 82
  numb[82] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[82] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[82] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 83
  numb[83] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[83] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[83] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 84
  numb[84] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[84] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[84] =  /* */ ~(1 << PC4);

  //number 85
  numb[85] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[85] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[85] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 86
  numb[86] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[86] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[86] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 87
  numb[87] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[87] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[87] =  /* */ ~(1 << PC4);

  //number 88
  numb[88] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[88] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[88] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 89
  numb[89] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2) & ~(1 << PB0);
  numb0[89] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[89] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 90
  numb[90] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) /* */ & ~(1 << PB2);
  numb0[90] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[90] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 91
  numb[91] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[91] = /* */ ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[91] = /* */ ~(1 << PC4);

  //number 92
  numb[92] = ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[92] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[92] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 93
  numb[93] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[93] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[93] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 94
  numb[94] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[94] = ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[94] =  /* */ ~(1 << PC4);

  //number 95
  numb[95] = ~(1 << PB5) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[95] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[95] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 96
  numb[96] = ~(1 << PB5) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[96] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[96] =  ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 97
  numb[97] = ~(1 << PB5) & ~(1 << PB4) /* */ & ~(1 << PB2);
  numb0[97] = ~(1 << PD7) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[97] =  /* */ ~(1 << PC4);

  //number 98
  numb[98] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB3) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[98] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[98] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //number 99
  numb[99] = ~(1 << PB5) & ~(1 << PB4) & ~(1 << PB1) /* */ & ~(1 << PB2);
  numb0[99] = ~(1 << PD7) & ~(1 << PD6) /* */ & ~(1 << PD5) & ~(1 << PD4) & ~(1 << PD3) & ~(1 << PD2);
  numb00[99] = ~(1 << PC5) /* */ & ~(1 << PC4);

  //for loop om door alle cijfers heen te lopen
  //tussen 0 en 99
  for(int x = 0; x < 100; ++x) {
    //opgeteld
    PORTB = numb[x];
    PORTD = numb0[x];
    PORTC = numb00[x];
    //snelheid van optellen
    _delay_ms(200);
  }
}

int main(void) {
  //dataregister alle pinnen als output
  DDRB = 0xFF;
  DDRD = 0xFF;
  DDRC = 0xFF;

  while(1) {
    //start de functie
    myForloop();
  }
  return 0;
}
